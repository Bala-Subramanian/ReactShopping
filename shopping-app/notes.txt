**Creating and starting the react project.
    create a folder with project name
    open npm and redirect to the path.
    npm create-react-app shopping-app
    (>>>npm install -g create-react-app reactapp<<<)

** Order of commands:
npm install -g create-react-app reactapp
npm install react-router-dom
npm install --save bootstrap
npm install --save prop-types
npm install axios
npm start

**After project creation, Change directory to the src folder and type
    'npm start' or 'yarn start'


**Dummy JSONs:
    https://jsonplaceholder.typicode.com/users
    https://robohash.org


**When to use functional component and when to use class component?
    Functional component:
        Use it when we need to get and send arguments and parameters.
    Class component:
        We can use it for normal conditions
        Use it when you want to set state.


**For routing, use 
    npm install react-router-dom
    or 
    yarn add react-router-dom

    then add <BrowserRouter> in the index.js
    SYNTAX:
    <Route exact path = "/" component={Homepage}/> //use the keyword EXACT
    <Route path = "/products" component  = {Productpage} 

    //For dynamic values:
    <Route path="/topics/:id" component={TopicDetails} />
    props.match.params.id -> will give the dynamic value
    
    SWITCH in Route:
    The <Switch /> component will only render the first route 
    that matches/includes the path. Once it finds the first route 
    that matches the path, it will not look for any other matches. 
    Not only that, it allows for nested routes to work properly, 
    which is something that <Router /> will not be able to handle

** Error Handling:
    static getDerviedStateFromError(error){
        return {
            hasError:true
        }
    }
    componentDidCatch(error, info){
        console.log(error);
        console.log(info);
    }


GET HTTP REQUEST:
    **npm install axios
    Add it in the 'componentDidMount(){}'
        fetch('https://jsonplaceholder.typicode.com/posts')
            .then(response => response.json())
            .then(json => console.log(json))
        orcd r``
        axios.get('https://jsonplaceholder.typicode.com/posts')
            .then(response => {console.log(response)})
            .catch(error => {console.log(error)})
    
POST HTTP REQUEST
        axios.post(url,value)
            .then(response => {console.log(response)})
            .catch(error => {console.log(error)})

Button onclick function will be called  on render method.
    to avoid this, instead of passing only method name while passing parameters, use an arrow function while passing parameters.
    Eg: Use:
    <button onClick={ () => onAddCart(data)}>ADD TO CART </button>
    Avoid:
    <button onClick={onAddCart(data)}>ADD TO CART </button>
